shipkit {
   //TODO change to 'linkedin/play-parseq'
   gitHub.repository = "mockitoguy/play-parseq"
   //TODO generate and use your own readonly token
   gitHub.readOnlyAuthToken = "76826c9ec886612f504d12fd4268b16721c4f85d" //for reading the issues in GitHub

   //TODO generate GitHub write token, and ensure your Travis CI has this env variable exported
   gitHub.writeAuthToken = System.getenv("GH_WRITE_TOKEN")
}

ext.releaseSpec = fileTree("dist") {
    exclude "com/linkedin/play-parseq/play-parseq-root*/**"
    exclude "com/linkedin/play-parseq/play-parseq-sample*/**"
}

task showReleaseSpec {
    description = "Shows what files will be uploaded to Bintray. Useful for debugging."
    doLast {
        if (releaseSpec.empty) {
            println "Directory 'dist' is empty. Did you run the build?"
        } else {
            println "Following files will be released to Bintray:"
            releaseSpec.each { println relativePath(it) }
        }
    }
}

plugins.withId("org.shipkit.bintray") {
   //Bintray configuration is handled by JFrog Bintray Gradle Plugin
   //For reference see the official documentation: https://github.com/bintray/gradle-bintray-plugin
   bintray {

       //Currently, we are using szczepiq's Bintray user+key to publish
       //In order to use a different user+key for publications:
       // 1. Get permissions to write to Bintray LinkedIn organization, use Bintray web UI to generate your key
       // 2. Update the 'user' setting below and export 'BINTRAY_API_KEY' env variable with your key
       pkg.user = 'szczepiq'
       key = System.getenv("BINTRAY_API_KEY") //this env variable is configured on our CI

       filesSpec {
           from releaseSpec
           into '.'
       }

       //TODO: set to true once we're ready
       publish = false

       pkg {
           repo = 'test-repo' //TODO: change to 'maven'
           userOrg = 'linkedin'
           name = 'play-parseq'
           licenses = ['Apache-2.0']
           labels = ['play', 'parseq']
       }
   }
}